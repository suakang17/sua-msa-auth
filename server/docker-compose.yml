version: "3.9"

services:
  application:
    restart: always
    networks:
      - kong-net
    container_name: auth-service
    build:
      context: ./authserver/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis

  kong:
    restart: always
    networks:
      - kong-net
    image: kong
    volumes:
      - "./config:/usr/local/kong/declarative"
    container_name: kong-gateway
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001,0.0.0.0:8444 ssl
      - KONG_LOG_LEVEL=debug
      - KONG_PLUGINS=bundled
      - KONG_ADMIN_GUI_URL=http://localhost:8002
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql:latest
    env_file:
      - .env
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
    ports:
      - "3306:3306"
    networks:
      - kong-net

  redis:
    image: redis:latest
    container_name: redis-db
    restart: always
    environment:
      REDIS_HOST: ${REDIS_HOST}
    ports:
      - "6379:6379"
    networks:
      - kong-net

networks:
  kong-net:
    external: true
